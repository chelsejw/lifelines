{"ast":null,"code":"import axios from 'axios';\nexport var api = '/api/v1';\nexport function setIsLoggedIn(bool) {\n  return {\n    type: 'SET_IS_LOGGED_IN',\n    isLoggedIn: bool\n  };\n}\nexport function setCurrentUser(data) {\n  return {\n    type: 'SET_CURRENT_USER',\n    data: data\n  };\n}\nexport function checkAuthError(bool) {\n  return {\n    type: 'CHECK_AUTH_HAS_ERROR',\n    checkAuthError: bool\n  };\n}\nexport function setActiveConversation(conversationId) {\n  return {\n    type: \"SET_ACTIVE_CONVERSATION\",\n    conversationId: conversationId\n  };\n}\nexport function checkAuth() {\n  return function (dispatch) {\n    axios.get(\"\".concat(api, \"/auth/check-login\")).then(function (res) {\n      if (res.data.isLoggedIn == false) {\n        return dispatch(setIsLoggedIn(false));\n      }\n\n      dispatch(setIsLoggedIn(true));\n      dispatch(setCurrentUser(res.data));\n    })[\"catch\"](function (err) {\n      dispatch(checkAuthError(true));\n      console.log(err.response);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/auth/actions.js"],"names":["axios","api","setIsLoggedIn","bool","type","isLoggedIn","setCurrentUser","data","checkAuthError","setActiveConversation","conversationId","checkAuth","dispatch","get","then","res","err","console","log","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,GAAG,GAAG,SAAZ;AAGP,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAE,kBADH;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP;AAIH;AACD,OAAO,SAASG,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHH,IAAAA,IAAI,EAAE,kBADH;AAEHG,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBL,IAAxB,EAA8B;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,sBADH;AAEHI,IAAAA,cAAc,EAAEL;AAFb,GAAP;AAIH;AAED,OAAO,SAASM,qBAAT,CAA+BC,cAA/B,EAA8C;AACjD,SAAO;AACLN,IAAAA,IAAI,EAAE,yBADD;AAELM,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAIH;AAED,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAO,UAACC,QAAD,EAAY;AACfZ,IAAAA,KAAK,CACJa,GADD,WACQZ,GADR,wBAECa,IAFD,CAEM,UAAAC,GAAG,EAAE;AACP,UAAIA,GAAG,CAACR,IAAJ,CAASF,UAAT,IAAqB,KAAzB,EAA+B;AAC3B,eAAOO,QAAQ,CAACV,aAAa,CAAC,KAAD,CAAd,CAAf;AACH;;AACDU,MAAAA,QAAQ,CAACV,aAAa,CAAC,IAAD,CAAd,CAAR;AACAU,MAAAA,QAAQ,CAACN,cAAc,CAACS,GAAG,CAACR,IAAL,CAAf,CAAR;AACH,KARD,WASO,UAAAS,GAAG,EAAI;AACVJ,MAAAA,QAAQ,CAACJ,cAAc,CAAC,IAAD,CAAf,CAAR;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB;AACH,KAZD;AAeH,GAhBD;AAiBH","sourcesContent":["import axios from 'axios'\n\nexport const api = '/api/v1'\n\n\nexport function setIsLoggedIn(bool) {\n    return {\n        type: 'SET_IS_LOGGED_IN',\n        isLoggedIn: bool\n    };\n}\nexport function setCurrentUser(data) {\n    return {\n        type: 'SET_CURRENT_USER',\n        data\n    };\n}\n\nexport function checkAuthError(bool) {\n    return {\n        type: 'CHECK_AUTH_HAS_ERROR',\n        checkAuthError: bool\n    };\n}\n\nexport function setActiveConversation(conversationId){\n    return {\n      type: \"SET_ACTIVE_CONVERSATION\",\n      conversationId,\n    };\n}\n\nexport function checkAuth() {\n    return (dispatch)=>{\n        axios\n        .get(`${api}/auth/check-login`)\n        .then(res=>{\n            if (res.data.isLoggedIn==false){\n                return dispatch(setIsLoggedIn(false));\n            }\n            dispatch(setIsLoggedIn(true));\n            dispatch(setCurrentUser(res.data))\n        })\n        .catch(err => {\n            dispatch(checkAuthError(true));\n            console.log(err.response)\n        })\n\n\n    }\n}"]},"metadata":{},"sourceType":"module"}