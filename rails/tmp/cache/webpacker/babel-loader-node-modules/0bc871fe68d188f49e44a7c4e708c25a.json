{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/chels/webdev/lifelines/app/javascript/packs/app/appeals/components/AppealOptions.js\";\n\nimport React from 'react';\nimport GridLoader from 'react-spinners/GridLoader';\n\nvar AppealOptions = function AppealOptions(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options-div row bg-light text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Search Options\"), props.sortErrors && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }\n  }, props.sortErrorMessage), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"sort-select mb-3\",\n    onChange: function onChange(e) {\n      return props.sort(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"newest\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Newest First\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"closest\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, \"Closest to me\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"least_popular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }, \"Least Popular First\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"oldest\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, \"Oldest First\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"popular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"Most Popular First\"))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch mr-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"includeClosed\",\n    onChange: function onChange(e) {\n      return props.filter(e.target.name, e.target.checked);\n    },\n    name: \"includeClosed\",\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"includeClosed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Include closed appeals\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"onlyVerified\",\n    onChange: function onChange(e) {\n      return props.filter(e.target.name, e.target.checked);\n    },\n    name: \"onlyVerified\",\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"onlyVerified\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Only verified appeals\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), \"Your Current Location: \", props.locString, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, props.loadingLoc ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Getting your location... \", /*#__PURE__*/React.createElement(GridLoader, {\n    size: 3,\n    color: \"gray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 42\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-sm\",\n    onClick: props.getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Get My Location\"), props.auth.isLoggedIn && props.auth.currentUser.profile.address !== null && props.auth.currentUser.profile.address !== \"\" && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ml-1 btn btn-secondary btn-sm\",\n    onClick: props.useMyAddress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Use My Postal Code\"))));\n};\n\nexport default AppealOptions;","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/appeals/components/AppealOptions.js"],"names":["React","GridLoader","AppealOptions","props","sortErrors","sortErrorMessage","e","sort","target","value","filter","name","checked","locString","loadingLoc","getMyLocation","auth","isLoggedIn","currentUser","profile","address","useMyAddress"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAU;AAE5B,sBACE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGA,KAAK,CAACC,UAAN,iBACC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BD,KAAK,CAACE,gBAAlC,CAHJ,eAME;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOH,KAAK,CAACI,IAAN,CAAWD,CAAC,CAACE,MAAF,CAASC,KAApB,CAAP;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,eAME;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANF,eAOE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,CANF,CADA,eAmBE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,aAAOH,KAAK,CAACO,MAAN,CAAaJ,CAAC,CAACE,MAAF,CAASG,IAAtB,EAA4BL,CAAC,CAACE,MAAF,CAASI,OAArC,CAAP;AAAA,KAFZ;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAnBF,eA4BE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA5BF,eA6BE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,cADL;AAEE,IAAA,QAAQ,EAAE,kBAACN,CAAD;AAAA,aAAOH,KAAK,CAACO,MAAN,CAAaJ,CAAC,CAACE,MAAF,CAASG,IAAtB,EAA4BL,CAAC,CAACE,MAAF,CAASI,OAArC,CAAP;AAAA,KAFZ;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMK,GANL,eAOE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA7BF,eAsCE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtCF,CADF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,6BA0C0BT,KAAK,CAACU,SA1ChC,eA2CE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,UAAN,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC2B,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3B,CADD,gBAKC;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,OAAO,EAAEX,KAAK,CAACY,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,EAaGZ,KAAK,CAACa,IAAN,CAAWC,UAAX,IACCd,KAAK,CAACa,IAAN,CAAWE,WAAX,CAAuBC,OAAvB,CAA+BC,OAA/B,KAA2C,IAD5C,IAECjB,KAAK,CAACa,IAAN,CAAWE,WAAX,CAAuBC,OAAvB,CAA+BC,OAA/B,KAA2C,EAF5C,iBAGG;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,OAAO,EAAEjB,KAAK,CAACkB,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhBN,CA3CF,CADF,CADF;AAwEH,CA1ED;;AA4EA,eAAenB,aAAf","sourcesContent":["import React from 'react'\nimport GridLoader from 'react-spinners/GridLoader'\nconst AppealOptions = (props)=> {\n\n    return (\n      <div className=\"options-div row bg-light text-center\">\n        <div className=\"col\">\n          <div className=\"pb-1\">\n          <div>\n            <h4 className=\"mb-3\">Search Options</h4>\n            {props.sortErrors && (\n              <p className=\"text-danger\">{props.sortErrorMessage}</p>\n            )}\n\n            <select\n              className=\"sort-select mb-3\"\n              onChange={(e) => props.sort(e.target.value)}\n            >\n              <option value=\"newest\">Newest First</option>\n              <option value=\"closest\">Closest to me</option>\n              <option value=\"least_popular\">Least Popular First</option>\n              <option value=\"oldest\">Oldest First</option>\n              <option value=\"popular\">Most Popular First</option>\n            </select>\n            </div>\n\n            <label className=\"switch mr-2\">\n              <input\n                id=\"includeClosed\"\n                onChange={(e) => props.filter(e.target.name, e.target.checked)}\n                name=\"includeClosed\"\n                type=\"checkbox\"\n              />\n              <span className=\"slider round\"></span>\n            </label>\n            <label htmlFor=\"includeClosed\">Include closed appeals</label>\n            <label className=\"switch mx-2\">\n              <input\n                id=\"onlyVerified\"\n                onChange={(e) => props.filter(e.target.name, e.target.checked)}\n                name=\"onlyVerified\"\n                type=\"checkbox\"\n              />{\" \"}\n              <span className=\"slider round\"></span>\n            </label>\n            <label htmlFor=\"onlyVerified\">Only verified appeals</label>\n          </div>\n          <hr />\n          Your Current Location: {props.locString}\n          <div className=\"mt-2\">\n            {props.loadingLoc ? (\n              <div>\n                Getting your location... <GridLoader size={3} color=\"gray\" />\n              </div>\n            ) : (\n              <button\n                className=\"btn btn-dark btn-sm\"\n                onClick={props.getMyLocation}\n              >\n                Get My Location\n              </button>\n            )}\n            {props.auth.isLoggedIn &&\n              props.auth.currentUser.profile.address !== null &&\n              props.auth.currentUser.profile.address !== \"\" && (\n                <button\n                  className=\"ml-1 btn btn-secondary btn-sm\"\n                  onClick={props.useMyAddress}\n                >\n                  Use My Postal Code\n                </button>\n              )}\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default AppealOptions"]},"metadata":{},"sourceType":"module"}