{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/chels/webdev/lifelines/app/javascript/packs/app/appeals/components/FocusedAppeal.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchOneAppeal as _fetchOneAppeal, fetchLifelineData as _fetchLifelineData, throwLifeline as _throwLifeline } from '../actions';\nimport { setActiveConversation as _setActiveConversation } from \"../../auth/actions\";\nimport axios from 'axios';\nimport { useParams, NavLink, useLocation } from 'react-router-dom';\n\nvar FocusedAppeal = function FocusedAppeal(props) {\n  var _useState5;\n\n  var location = useLocation();\n  var appealIdParams = location.pathname.slice(9);\n\n  var _useState = useState(appealIdParams),\n      _useState2 = _slicedToArray(_useState, 2),\n      appealId = _useState2[0],\n      setAppealId = _useState2[1];\n\n  var _useState3 = useState((_useState5 = {\n    id: \"\",\n    species: \"\",\n    clinic: \"\"\n  }, _defineProperty(_useState5, \"species\", \"\"), _defineProperty(_useState5, \"pet_name\", \"\"), _defineProperty(_useState5, \"user\", \"\"), _defineProperty(_useState5, \"img_url\", \"\"), _useState5)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appeal = _useState4[0],\n      setAppeal = _useState4[1];\n\n  useEffect(function () {\n    setAppealId(appealIdParams);\n  }, [location]);\n  useEffect(function () {\n    axios.get(\"/api/v1/appeals/\".concat(appealId)).then(function (res) {\n      setAppeal(res.data);\n      setAppealId(res.data.id);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }, [appealId]);\n  useEffect(function () {\n    props.fetchLifelineData(appealId);\n  }, [props.throwLifelineData, appeal, location]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-75 mx-auto pb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Appeal for: \", appeal.pet_name, \" the \", appeal.species.name), /*#__PURE__*/React.createElement(\"img\", {\n    src: appeal.img_url,\n    className: \"img-fluid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Description\"), appeal.description ? appeal.description : \"This user did not include a description.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \" Clinic Details \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, appeal.clinic.name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-clinic-medical mr-2 text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), appeal.clinic.address, /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    \"class\": \"fas fa-phone mr-2 text-secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), appeal.clinic.phone), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-4 share-link-footer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Can't help? Share the appeal!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      var url = document.getElementById(\"appealUrl\");\n      url.select();\n      url.setSelectionRange(0, 99999);\n      /*For mobile devices*/\n\n      /* Copy the text inside the text field */\n\n      document.execCommand(\"copy\");\n      /* Alert the copied text */\n\n      alert(\"Copied the link!\");\n    },\n    className: \"btn btn-sm btn-link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Copy Link\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"appealUrl\",\n    className: \"share-link w-75\",\n    type: \"text\",\n    value: \"http://lifelines.herokuapp.com/appeals/\".concat(appeal.id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), props.auth.isLoggedIn && !props.lifelines.isUserConnected && appeal.status !== \"closed\" && props.auth.currentUser.user.id !== appeal.user.id && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, \"If you have an eligible pet, click \\\"Throw A Lifeline\\\" to start a conversation!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      props.throwLifeline(props.auth.currentUser.user, appeal.user, appeal.id);\n    },\n    className: \"btn btn-block btn-danger my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    \"class\": \"fas fa-heartbeat mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), \" Throw A Lifeline!\")), appeal.status == \"closed\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"This appeal is closed.\"), props.auth.isLoggedIn && props.lifelines.isUserConnected && /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick() {\n      props.setActiveConversation(props.lifelines.conversation_id);\n    },\n    className: \"btn btn-danger btn-block\",\n    to: \"/chats\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"You have a conversation for this appeal.\"), !props.auth.isLoggedIn && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/users/sign_in\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark btn-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Login now to help!\")), props.throwLifelineData.success && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Thank you for throwing a lifeline! Start a conversation.\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    lifelines: state.appeals.focusedLifeline,\n    throwLifelineData: state.appeals.throwLifeline\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkAuth: function (_checkAuth) {\n      function checkAuth() {\n        return _checkAuth.apply(this, arguments);\n      }\n\n      checkAuth.toString = function () {\n        return _checkAuth.toString();\n      };\n\n      return checkAuth;\n    }(function () {\n      dispatch(checkAuth());\n    }),\n    fetchLifelineData: function fetchLifelineData(appealId) {\n      dispatch(_fetchLifelineData(appealId));\n    },\n    throwLifeline: function throwLifeline(user, appealOwner, appealId) {\n      dispatch(_throwLifeline(user, appealOwner, appealId));\n    },\n    setActiveConversation: function setActiveConversation(convoId) {\n      dispatch(_setActiveConversation(convoId));\n    },\n    fetchOneAppeal: function fetchOneAppeal(appealId) {\n      dispatch(_fetchOneAppeal(appealId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FocusedAppeal);","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/appeals/components/FocusedAppeal.jsx"],"names":["React","useEffect","useState","connect","fetchOneAppeal","fetchLifelineData","throwLifeline","setActiveConversation","axios","useParams","NavLink","useLocation","FocusedAppeal","props","location","appealIdParams","pathname","slice","appealId","setAppealId","id","species","clinic","appeal","setAppeal","get","then","res","data","err","console","log","throwLifelineData","pet_name","name","img_url","description","address","phone","url","document","getElementById","select","setSelectionRange","execCommand","alert","auth","isLoggedIn","lifelines","isUserConnected","status","currentUser","user","conversation_id","success","mapStateToProps","state","appeals","focusedLifeline","mapDispatchToProps","dispatch","checkAuth","appealOwner","convoId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {fetchOneAppeal, fetchLifelineData, throwLifeline} from '../actions'\nimport { setActiveConversation } from \"../../auth/actions\";\nimport axios from 'axios'\nimport {useParams, NavLink, useLocation} from 'react-router-dom'\n\nconst FocusedAppeal = (props) => {\n\n  let location = useLocation();\n  let appealIdParams = location.pathname.slice(9);\n  const [appealId, setAppealId] = useState(appealIdParams);\n  const [appeal, setAppeal] = useState({\n    id: \"\",\n    species: \"\",\n    clinic: \"\",\n    species: \"\",\n    pet_name: \"\",\n    user: \"\",\n    img_url: \"\"\n  });\n\n  useEffect(()=> {\n    setAppealId(appealIdParams)\n  }, [location])\n\n    useEffect(() => {\n       axios.get(`/api/v1/appeals/${appealId}`)\n       .then(res => {\n         setAppeal(res.data)\n         setAppealId(res.data.id)\n       })\n       .catch(err => {\n         console.log(err)\n       })\n    }, [appealId]);\n\n    useEffect(() => {\n      props.fetchLifelineData(appealId);\n    }, [props.throwLifelineData, appeal, location]);\n\n    \n    return (\n      <div className=\"w-75 mx-auto pb-4\">\n        <div className=\"text-center mb-4\">\n          <h3>\n            Appeal for: {appeal.pet_name} the {appeal.species.name}\n          </h3>\n          <img src={appeal.img_url} className=\"img-fluid\" />\n        </div>\n\n        <div className=\"my-3\">\n          <h5>Description</h5>\n          {appeal.description\n            ? appeal.description\n            : \"This user did not include a description.\"}\n        </div>\n        <hr />\n\n        <div>\n          <h5> Clinic Details </h5>\n          <span className=\"font-weight-bold\">{appeal.clinic.name}</span>\n          <br />\n          <i className=\"fas fa-clinic-medical mr-2 text-secondary\"></i>\n          {appeal.clinic.address}\n          <br />\n          <i class=\"fas fa-phone mr-2 text-secondary\"></i>\n          {appeal.clinic.phone}\n        </div>\n        <hr />\n\n        <div className=\"my-4 share-link-footer\">\n          <h5>Can't help? Share the appeal!</h5>\n          <button\n            onClick={() => {\n              let url = document.getElementById(\"appealUrl\");\n              url.select();\n              url.setSelectionRange(0, 99999); /*For mobile devices*/\n\n              /* Copy the text inside the text field */\n              document.execCommand(\"copy\");\n\n              /* Alert the copied text */\n              alert(\"Copied the link!\");\n            }}\n            className=\"btn btn-sm btn-link\"\n          >\n            Copy Link\n          </button>\n          <input\n            id=\"appealUrl\"\n            className=\"share-link w-75\"\n            type=\"text\"\n            value={`http://lifelines.herokuapp.com/appeals/${appeal.id}`}\n          />\n        </div>\n\n        {props.auth.isLoggedIn &&\n          !props.lifelines.isUserConnected &&\n          appeal.status !== \"closed\" &&\n          props.auth.currentUser.user.id !== appeal.user.id && (\n            <div className=\"text-center\">\n              <p>\n                If you have an eligible pet, click \"Throw A Lifeline\" to start a\n                conversation!\n              </p>\n              <button\n                onClick={() => {\n                  props.throwLifeline(\n                    props.auth.currentUser.user,\n                    appeal.user,\n                    appeal.id\n                  );\n                }}\n                className=\"btn btn-block btn-danger my-2\"\n              >\n                <i class=\"fas fa-heartbeat mr-1\"></i> Throw A Lifeline!\n              </button>\n            </div>\n          )}\n\n        {appeal.status == \"closed\" && (\n          <p className=\"text-danger my-4\">This appeal is closed.</p>\n        )}\n\n        {props.auth.isLoggedIn && props.lifelines.isUserConnected && (\n          <NavLink\n            onClick={() => {\n              props.setActiveConversation(props.lifelines.conversation_id);\n            }}\n            className=\"btn btn-danger btn-block\"\n            to=\"/chats\"\n          >\n            You have a conversation for this appeal.\n          </NavLink>\n        )}\n        {!props.auth.isLoggedIn && (\n          <a href=\"/users/sign_in\">\n            <button className=\"btn btn-dark btn-block\">\n              Login now to help!\n            </button>\n          </a>\n        )}\n\n        {props.throwLifelineData.success && (\n          <p>Thank you for throwing a lifeline! Start a conversation.</p>\n        )}\n      </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.auth,\n        lifelines: state.appeals.focusedLifeline,\n        throwLifelineData: state.appeals.throwLifeline\n    };\n  };\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      checkAuth: () => {\n        dispatch(checkAuth());\n      },\n      fetchLifelineData: (appealId) => {\n        dispatch(fetchLifelineData(appealId));\n      },\n      throwLifeline: (user, appealOwner, appealId) => {\n        dispatch(throwLifeline(user, appealOwner, appealId));\n      },\n      setActiveConversation: (convoId) => {\n        dispatch(setActiveConversation(convoId));\n      },\n      fetchOneAppeal: (appealId) => {\n        dispatch(fetchOneAppeal(appealId))\n      }\n    };\n  };\n  \n  \nexport default connect(mapStateToProps, mapDispatchToProps)(FocusedAppeal)\n"]},"metadata":{},"sourceType":"module"}