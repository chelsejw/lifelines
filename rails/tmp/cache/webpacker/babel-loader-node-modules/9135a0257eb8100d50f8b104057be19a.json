{"ast":null,"code":"var _jsxFileName = \"/Users/chels/webdev/lifelines/app/javascript/packs/app/chat/ConversationsList.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"./constants\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nvar ConversationsList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConversationsList, _React$Component);\n\n  var _super = _createSuper(ConversationsList);\n\n  function ConversationsList() {\n    var _this;\n\n    _classCallCheck(this, ConversationsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      conversations: [],\n      activeConversation: null\n    };\n\n    _this.componentDidMount = function () {\n      fetch(\"\".concat(API_ROOT, \"/conversations\")).then(function (res) {\n        return res.json();\n      }).then(function (conversations) {\n        return _this.setState({\n          conversations: conversations\n        });\n      });\n    };\n\n    _this.handleClick = function (id) {\n      _this.setState({\n        activeConversation: id\n      });\n\n      var elem = document.querySelector(\".messages\");\n      console.log(elem);\n      elem.scrollTop = elem.scrollHeight;\n    };\n\n    _this.handleReceivedConversation = function (response) {\n      var conversation = response.conversation;\n\n      _this.setState({\n        conversations: [].concat(_toConsumableArray(_this.state.conversations), [conversation])\n      });\n    };\n\n    _this.handleReceivedMessage = function (response) {\n      var message = response.message;\n\n      var conversations = _toConsumableArray(_this.state.conversations);\n\n      var conversation = conversations.find(function (conversation) {\n        return conversation.id === message.conversation_id;\n      });\n      var duplicateMessages = conversation.messages.filter(function (msg) {\n        return msg.id == message.id;\n      });\n\n      if (duplicateMessages.length !== 0) {\n        return;\n      } else {\n        conversation.messages = [].concat(_toConsumableArray(conversation.messages), [message]);\n\n        _this.setState({\n          conversations: conversations\n        });\n      }\n    };\n\n    _this.render = function () {\n      var findActiveConversation = function findActiveConversation(conversations, activeConversation) {\n        return conversations.find(function (conversation) {\n          return conversation.id === activeConversation;\n        });\n      };\n\n      var mapConversations = function mapConversations(conversations, handleClick) {\n        return conversations.map(function (conversation, index) {\n          var recipient = conversation.users.find(function (user) {\n            return user.id !== _this.props.auth.currentUser.user.id;\n          });\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: index,\n            className: \"w-100 convo-item\",\n            onClick: function onClick() {\n              return handleClick(conversation.id);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row px-3 py-4\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"convo-item-pic mx-2\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: conversation.lifeline.appeal.img_url !== \"\" && conversation.lifeline.appeal.img_url ? conversation.lifeline.appeal.img_url : \"https://res.cloudinary.com/dwbuqa4dx/image/upload/v1592316118/logo1_bf4f9f.png\",\n            className: \"img-fluid\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"convo-item-body\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }\n          }, \" \", \"With\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n            className: \"font-weight-bold\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }\n          }, recipient.profile.display_name), /*#__PURE__*/React.createElement(\"br\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }\n          }), \"For\", \" \", /*#__PURE__*/React.createElement(Link, {\n            className: \"text-danger\",\n            to: \"/appeals/\".concat(conversation.lifeline.appeal.id),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }\n          }, conversation.lifeline.appeal.pet_name, \"'s appeal\"))));\n        });\n      };\n\n      var _this$state = _this.state,\n          conversations = _this$state.conversations,\n          activeConversation = _this$state.activeConversation;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"conversationsList row\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-left col-md-5 col-6 p-0\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"p-4\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Conversations\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-0\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ActionCableConsumer, {\n        channel: {\n          channel: \"ConversationsChannel\"\n        },\n        onReceived: _this.handleReceivedConversation,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }), _this.state.conversations.length ? /*#__PURE__*/React.createElement(Cable, {\n        conversations: conversations,\n        handleReceivedMessage: _this.handleReceivedMessage,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }) : null, conversations.length > 0 ? mapConversations(conversations, _this.handleClick) : /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ml-4\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 93\n        }\n      }, \"You do not have any conversations.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-7 col-6 p-0\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, activeConversation ? /*#__PURE__*/React.createElement(MessagesArea, {\n        currentUser: _this.props.currentUser,\n        conversation: findActiveConversation(conversations, activeConversation),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }) : null));\n    };\n\n    return _this;\n  }\n\n  return ConversationsList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    currentUser: state.auth.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(ConversationsList); // helpers","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/chat/ConversationsList.jsx"],"names":["React","ActionCableConsumer","API_ROOT","MessagesArea","Cable","connect","Link","ConversationsList","state","conversations","activeConversation","componentDidMount","fetch","then","res","json","setState","handleClick","id","elem","document","querySelector","console","log","scrollTop","scrollHeight","handleReceivedConversation","response","conversation","handleReceivedMessage","message","find","conversation_id","duplicateMessages","messages","filter","msg","length","render","findActiveConversation","mapConversations","map","index","recipient","users","user","props","auth","currentUser","lifeline","appeal","img_url","profile","display_name","pet_name","channel","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ActionCableConsumer } from \"react-actioncable-provider\";\nimport { API_ROOT } from \"./constants\";\nimport MessagesArea from \"./MessagesArea\";\nimport Cable from \"./Cable\";\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nclass ConversationsList extends React.Component {\n  state = {\n    conversations: [],\n    activeConversation: null,\n  };\n\n  componentDidMount = () => {\n    fetch(`${API_ROOT}/conversations`)\n      .then((res) => res.json())\n      .then((conversations) => this.setState({ conversations }));\n  };\n\n  handleClick = (id) => {\n    \n    this.setState({ activeConversation: id });\n           var elem = document.querySelector(\".messages\");\n           console.log(elem);\n           elem.scrollTop = elem.scrollHeight;\n  };\n\n  handleReceivedConversation = (response) => {\n    const { conversation } = response;\n    this.setState({\n      conversations: [...this.state.conversations, conversation],\n    });\n  };\n\n  handleReceivedMessage = (response) => {\n    const { message } = response;\n    const conversations = [...this.state.conversations];\n    const conversation = conversations.find(\n      (conversation) => conversation.id === message.conversation_id\n    );\n\n    let duplicateMessages = conversation.messages.filter(\n      (msg) => msg.id == message.id\n    );\n\n    if (duplicateMessages.length !== 0) {\n      return;\n    } else {\n      conversation.messages = [...conversation.messages, message];\n      this.setState({ conversations });\n    }\n  };\n\n  render = () => {\n\n  const findActiveConversation = (conversations, activeConversation) => {\n    return conversations.find(\n      (conversation) => conversation.id === activeConversation\n    );\n  };\n\n  const mapConversations = (conversations, handleClick) => {\n    return conversations.map((conversation, index) => {\n      let recipient = conversation.users.find(\n        (user) => user.id !== this.props.auth.currentUser.user.id\n      );\n\n      return (\n        <div\n          key={index}\n          className=\"w-100 convo-item\"\n          onClick={() => handleClick(conversation.id)}\n        >\n          <div className=\"row px-3 py-4\">\n            <div className=\"convo-item-pic mx-2\">\n              <img\n                src={\n                  conversation.lifeline.appeal.img_url !== \"\" &&\n                  conversation.lifeline.appeal.img_url\n                    ? conversation.lifeline.appeal.img_url\n                    : \"https://res.cloudinary.com/dwbuqa4dx/image/upload/v1592316118/logo1_bf4f9f.png\"\n                }\n                className=\"img-fluid\"\n              />\n            </div>\n            <div className=\"convo-item-body\">\n              {\" \"}\n              With{\" \"}\n              <span className=\"font-weight-bold\">\n                {recipient.profile.display_name}\n              </span>\n              <br />\n              For{\" \"}\n              <Link\n                className=\"text-danger\"\n                to={`/appeals/${conversation.lifeline.appeal.id}`}\n              >\n                {conversation.lifeline.appeal.pet_name}'s appeal\n              </Link>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n    const { conversations, activeConversation } = this.state;\n    return (\n      <div className=\"conversationsList row\">\n        <div className=\"chat-left col-md-5 col-6 p-0\">\n          <h3 className=\"p-4\">Conversations</h3>\n\n          <div className=\"px-0\">\n            <ActionCableConsumer\n              channel={{ channel: \"ConversationsChannel\" }}\n              onReceived={this.handleReceivedConversation}\n            />\n            {this.state.conversations.length ? (\n              <Cable\n                conversations={conversations}\n                handleReceivedMessage={this.handleReceivedMessage}\n              />\n            ) : null}\n            {conversations.length > 0 ? mapConversations(conversations, this.handleClick) : <p className=\"ml-4\">You do not have any conversations.</p>}\n          </div>\n        </div>\n\n        <div className=\"col-md-7 col-6 p-0\">\n          {activeConversation ? (\n            <MessagesArea\n            currentUser={this.props.currentUser}\n              conversation={findActiveConversation(\n                conversations,\n                activeConversation\n              )}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n    currentUser: state.auth.currentUser\n  };\n};\nexport default connect(mapStateToProps)(ConversationsList);\n// helpers\n"]},"metadata":{},"sourceType":"module"}