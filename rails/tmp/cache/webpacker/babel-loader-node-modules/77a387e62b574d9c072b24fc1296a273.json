{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nexport function appealsHasError(bool) {\n  return {\n    type: 'APPEALS_HAS_ERROR',\n    hasErrored: bool\n  };\n}\nexport function appealsIsLoading(bool) {\n  return {\n    type: 'APPEALS_IS_LOADING',\n    isLoading: bool\n  };\n}\nexport function appealsFetchDataSuccess(data) {\n  return {\n    type: 'APPEALS_FETCH_DATA_SUCCESS',\n    data: data\n  };\n}\nexport function fetchAllAppeals(url) {\n  return function (dispatch) {\n    dispatch(appealsIsLoading(true));\n    console.log(\"in appealsFetchData\");\n    axios.get(url).then(function (response) {\n      dispatch(appealsIsLoading(false));\n      console.log(\"got response\");\n      dispatch(appealsFetchDataSuccess(response.data));\n    })[\"catch\"](function (err) {\n      console.log(err);\n      dispatch(appealsHasError(true));\n    });\n  };\n}\nexport function focusedAppealHasError(bool) {\n  return {\n    type: 'FOCUSED_APPEAL_HAS_ERROR',\n    hasErrored: bool\n  };\n}\nexport function focusedAppealIsLoading(bool) {\n  return {\n    type: 'FOCUSED_APPEAL_IS_LOADINF',\n    isLoading: bool\n  };\n}\nexport function focusedAppealFetchDataSuccess(data) {\n  return {\n    type: 'FOCUSED_APPEAL_FETCH_DATA_SUCCESS',\n    data: data\n  };\n}\nexport function fetchOneAppeal(appealId) {\n  return function (dispatch) {\n    dispatch(focusedAppealIsLoading(true));\n    console.log(\"in fetchOneAppeal\");\n    axios.get(\"/api/v1/appeals/\".concat(appealId)).then(function (response) {\n      dispatch(focusedAppealIsLoading(false));\n      console.log(\"got response\");\n      console.log(response.data);\n      dispatch(focusedAppealFetchDataSuccess(response.data));\n    })[\"catch\"](function (err) {\n      console.log(err);\n      dispatch(focusedAppealHasError(true));\n    });\n  };\n}\nexport function lifelinesFetchDataSuccess(data) {\n  return {\n    type: 'LIFELINES_FETCH_DATA_SUCCESS',\n    data: data\n  };\n}\nexport function fetchLifelineData(appealId) {\n  return function (dispatch) {\n    axios.get(\"/api/v1/appeals/\".concat(appealId, \"/get-lifelines\")).then(function (response) {\n      dispatch(lifelinesFetchDataSuccess(response.data));\n    })[\"catch\"](function (err) {\n      console.log(\"Alamak got error\");\n      console.log(err);\n    });\n  };\n}\n;\nexport function throwLifelineSuccess(data) {\n  return {\n    type: 'THROW_LIFELINE_SUCCESS',\n    data: data\n  };\n}\nexport function throwLifeline(user, appealOwner, appealId) {\n  return function (dispatch) {\n    var token = document.querySelector(\"[name=csrf-token]\").content;\n    axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n    axios.post(\"/api/v1/appeals/\".concat(appealId, \"/throw-lifeline\")).then(function (res) {\n      dispatch(throwLifelineSuccess(res.data));\n      return res.data;\n    }).then(function (res) {\n      axios.post(\"/conversations\", {\n        conversation: {\n          lifeline_id: res.id,\n          user_ids: [user.id, appealOwner.id]\n        }\n      }).then(function (res) {\n        console.log(\"was there a response from post to convos\");\n        console.log(\"res,\", res);\n      })[\"catch\"](function (err) {\n        console.log(\"error in post request\");\n        console.log(err.response);\n      });\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/appeals/actions/index.js"],"names":["axios","moment","appealsHasError","bool","type","hasErrored","appealsIsLoading","isLoading","appealsFetchDataSuccess","data","fetchAllAppeals","url","dispatch","console","log","get","then","response","err","focusedAppealHasError","focusedAppealIsLoading","focusedAppealFetchDataSuccess","fetchOneAppeal","appealId","lifelinesFetchDataSuccess","fetchLifelineData","throwLifelineSuccess","throwLifeline","user","appealOwner","token","document","querySelector","content","defaults","headers","common","post","res","conversation","lifeline_id","id","user_ids"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAE,mBADH;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP;AAIH;AACD,OAAO,SAASG,gBAAT,CAA0BH,IAA1B,EAAgC;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAE,oBADH;AAEHG,IAAAA,SAAS,EAAEJ;AAFR,GAAP;AAIH;AACD,OAAO,SAASK,uBAAT,CAAiCC,IAAjC,EAAuC;AAC1C,SAAO;AACHL,IAAAA,IAAI,EAAE,4BADH;AAEHK,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AACD,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AACjC,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACN,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAUJ,GAAV,EACKK,IADL,CACU,UAACC,QAAD,EAAc;AAChBL,MAAAA,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR;AACAF,MAAAA,QAAQ,CAACJ,uBAAuB,CAACS,QAAQ,CAACR,IAAV,CAAxB,CAAR;AACH,KALL,WAMW,UAACS,GAAD,EAAS;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAN,MAAAA,QAAQ,CAACV,eAAe,CAAC,IAAD,CAAhB,CAAR;AACH,KATL;AAUH,GAbD;AAcH;AAED,OAAO,SAASiB,qBAAT,CAA+BhB,IAA/B,EAAqC;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,0BADH;AAEHC,IAAAA,UAAU,EAAEF;AAFT,GAAP;AAIH;AACD,OAAO,SAASiB,sBAAT,CAAgCjB,IAAhC,EAAsC;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAE,2BADH;AAEHG,IAAAA,SAAS,EAAEJ;AAFR,GAAP;AAIH;AACD,OAAO,SAASkB,6BAAT,CAAuCZ,IAAvC,EAA6C;AAChD,SAAO;AACHL,IAAAA,IAAI,EAAE,mCADH;AAEHK,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASa,cAAT,CAAwBC,QAAxB,EAAkC;AACrC,SAAO,UAACX,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACQ,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AACAP,IAAAA,OAAO,CAACC,GAAR;AACAd,IAAAA,KAAK,CAACe,GAAN,2BAA6BQ,QAA7B,GACKP,IADL,CACU,UAACC,QAAD,EAAc;AAChBL,MAAAA,QAAQ,CAACQ,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AACAP,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACR,IAArB;AACAG,MAAAA,QAAQ,CAACS,6BAA6B,CAACJ,QAAQ,CAACR,IAAV,CAA9B,CAAR;AACH,KANL,WAOW,UAACS,GAAD,EAAS;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAN,MAAAA,QAAQ,CAACO,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACH,KAVL;AAWH,GAdD;AAeH;AAED,OAAO,SAASK,yBAAT,CAAmCf,IAAnC,EAAyC;AAC5C,SAAO;AACHL,IAAAA,IAAI,EAAE,8BADH;AAEHK,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASgB,iBAAT,CAA2BF,QAA3B,EAAqC;AACxC,SAAO,UAACX,QAAD,EAAc;AACjBZ,IAAAA,KAAK,CAACe,GAAN,2BAA6BQ,QAA7B,qBACKP,IADL,CACU,UAACC,QAAD,EAAc;AAChBL,MAAAA,QAAQ,CAACY,yBAAyB,CAACP,QAAQ,CAACR,IAAV,CAA1B,CAAR;AACH,KAHL,WAIW,UAACS,GAAD,EAAS;AACZL,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAPL;AAQH,GATD;AAUH;AAAA;AAED,OAAO,SAASQ,oBAAT,CAA8BjB,IAA9B,EAAmC;AACtC,SAAO;AACHL,IAAAA,IAAI,EAAE,wBADH;AAEHK,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH;AAED,OAAO,SAASkB,aAAT,CAAuBC,IAAvB,EAA6BC,WAA7B,EAA0CN,QAA1C,EAAmD;AACtD,SAAO,UAACX,QAAD,EAAY;AACf,QAAMkB,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,OAA1D;AACAjC,IAAAA,KAAK,CAACkC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDN,KAAhD;AACA9B,IAAAA,KAAK,CACJqC,IADD,2BACyBd,QADzB,sBAECP,IAFD,CAEM,UAAAsB,GAAG,EAAI;AACT1B,MAAAA,QAAQ,CAACc,oBAAoB,CAACY,GAAG,CAAC7B,IAAL,CAArB,CAAR;AACA,aAAO6B,GAAG,CAAC7B,IAAX;AACH,KALD,EAMCO,IAND,CAMM,UAACsB,GAAD,EAAO;AACTtC,MAAAA,KAAK,CACLqC,IADA,mBACuB;AACnBE,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAEF,GAAG,CAACG,EADL;AAEZC,UAAAA,QAAQ,EAAE,CAACd,IAAI,CAACa,EAAN,EAAUZ,WAAW,CAACY,EAAtB;AAFE;AADK,OADvB,EAOCzB,IAPD,CAOM,UAACsB,GAAD,EAAO;AACXzB,QAAAA,OAAO,CAACC,GAAR;AACAD,QAAAA,OAAO,CAACC,GAAR,SAAoBwB,GAApB;AACD,OAVD,WAWO,UAAApB,GAAG,EAAI;AACZL,QAAAA,OAAO,CAACC,GAAR;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACD,QAAhB;AACD,OAdD;AAeD,KAtBH,WAuBO,UAAAC,GAAG;AAAA,aAAEL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAF;AAAA,KAvBV;AAwBH,GA3BD;AA4BH","sourcesContent":["import axios from 'axios'\nimport moment from 'moment'\n\nexport function appealsHasError(bool) {\n    return {\n        type: 'APPEALS_HAS_ERROR',\n        hasErrored: bool\n    };\n}\nexport function appealsIsLoading(bool) {\n    return {\n        type: 'APPEALS_IS_LOADING',\n        isLoading: bool\n    };\n}\nexport function appealsFetchDataSuccess(data) {\n    return {\n        type: 'APPEALS_FETCH_DATA_SUCCESS',\n        data\n    };\n}\nexport function fetchAllAppeals(url) {\n    return (dispatch) => {\n        dispatch(appealsIsLoading(true));\n        console.log(`in appealsFetchData`)\n        axios.get(url)\n            .then((response) => {\n                dispatch(appealsIsLoading(false));\n                console.log(`got response`)\n                dispatch(appealsFetchDataSuccess(response.data))\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch(appealsHasError(true))\n            });\n    };\n}\n\nexport function focusedAppealHasError(bool) {\n    return {\n        type: 'FOCUSED_APPEAL_HAS_ERROR',\n        hasErrored: bool\n    };\n}\nexport function focusedAppealIsLoading(bool) {\n    return {\n        type: 'FOCUSED_APPEAL_IS_LOADINF',\n        isLoading: bool\n    };\n}\nexport function focusedAppealFetchDataSuccess(data) {\n    return {\n        type: 'FOCUSED_APPEAL_FETCH_DATA_SUCCESS',\n        data\n    };\n}\n\nexport function fetchOneAppeal(appealId) {\n    return (dispatch) => {\n        dispatch(focusedAppealIsLoading(true));\n        console.log(`in fetchOneAppeal`)\n        axios.get(`/api/v1/appeals/${appealId}`)\n            .then((response) => {\n                dispatch(focusedAppealIsLoading(false));\n                console.log(`got response`)\n                console.log(response.data)\n                dispatch(focusedAppealFetchDataSuccess(response.data))\n            })\n            .catch((err) => {\n                console.log(err)\n                dispatch(focusedAppealHasError(true))\n            });\n    };\n}\n\nexport function lifelinesFetchDataSuccess(data) {\n    return {\n        type: 'LIFELINES_FETCH_DATA_SUCCESS',\n        data\n    };\n}\n\nexport function fetchLifelineData(appealId) {\n    return (dispatch) => {\n        axios.get(`/api/v1/appeals/${appealId}/get-lifelines`)\n            .then((response) => {\n                dispatch(lifelinesFetchDataSuccess(response.data))\n            })\n            .catch((err) => {\n                console.log(`Alamak got error`)\n                console.log(err)\n            });\n    }\n};\n\nexport function throwLifelineSuccess(data){\n    return {\n        type: 'THROW_LIFELINE_SUCCESS',\n        data\n    }\n}\n\nexport function throwLifeline(user, appealOwner, appealId){\n    return (dispatch)=>{\n        const token = document.querySelector(\"[name=csrf-token]\").content;\n        axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;  \n        axios\n        .post(`/api/v1/appeals/${appealId}/throw-lifeline`)\n        .then(res => {\n            dispatch(throwLifelineSuccess(res.data))\n            return res.data\n        })\n        .then((res)=>{\n            axios.\n            post(`/conversations`, {\n                conversation: {\n                  lifeline_id: res.id,\n                  user_ids: [user.id, appealOwner.id]\n                }\n            })\n            .then((res)=>{\n              console.log(`was there a response from post to convos`)\n              console.log(`res,`, res)\n            })  \n            .catch(err => {\n              console.log(`error in post request`)\n              console.log(err.response)\n            })\n          })\n        .catch(err=>console.log(err))\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}