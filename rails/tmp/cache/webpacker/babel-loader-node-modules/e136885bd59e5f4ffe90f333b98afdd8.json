{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nexport var api = '/api/v1/';\nexport function appealPostRequestHasError(bool) {\n  return {\n    type: 'APPEAL_POST_REQUEST_HAS_ERROR',\n    hasErrored: bool\n  };\n}\nexport function appealPostRequestIsLoading(bool) {\n  return {\n    type: 'APPEAL_POST_REQUEST_IS_LOADING',\n    isLoading: bool\n  };\n}\nexport function appealPostRequestSuccess(data) {\n  return {\n    type: 'APPEAL_POST_REQUEST_DATA_SUCCESS',\n    data: data\n  };\n}\nexport function trackInputData(input, field) {\n  return {\n    type: 'TRACK_INPUT_DATA',\n    field: field,\n    input: input\n  };\n}\nexport function getEditFormDataHasError(_boolean, statusCode, statusText) {\n  return {\n    type: 'GET_EDIT_FORM_DATA_HAS_ERROR',\n    hasErrored: _boolean,\n    statusCode: statusCode,\n    statusText: statusText\n  };\n}\nexport function getEditFormDataIsLoading(_boolean2) {\n  return {\n    type: 'GET_EDIT_FORM_DATA_IS_LOADING',\n    isLoading: _boolean2\n  };\n}\nexport function formDataFetchSuccess(data, field) {\n  return {\n    type: 'GET_FORM_FIELD_DATA',\n    data: data,\n    field: field\n  };\n}\nexport function getFormRenderData() {\n  return function (dispatch) {\n    axios.get(\"\".concat(api, \"clinics\")).then(function (response) {\n      console.log(\"got clinic data\");\n      dispatch(formDataFetchSuccess(response.data, \"clinics\"));\n    }).then(function () {\n      axios.get(\"\".concat(api, \"species\")).then(function (response) {\n        console.log(\"got species data\");\n        dispatch(formDataFetchSuccess(response.data, \"species\"));\n      });\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    axios.get(\"api\");\n  };\n}\nexport function clearForm() {\n  return {\n    type: 'CLEAR_FORM'\n  };\n}\nexport function postAppealForm(payload, userId) {\n  return function (dispatch) {\n    dispatch(appealPostRequestHasError(false));\n    dispatch(appealPostRequestIsLoading(true));\n    var token = document.querySelector(\"[name=csrf-token]\").content;\n    axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n\n    var appealData = _objectSpread(_objectSpread({}, payload), {}, {\n      user_id: userId,\n      status: \"open\"\n    });\n\n    axios.post(\"/api/v1/appeals\", appealData).then(function (response) {\n      dispatch(appealPostRequestIsLoading(false));\n      console.log(\"got response\");\n      console.log(response.data);\n      dispatch(appealPostRequestSuccess(response.data));\n      dispatch(clearForm());\n    })[\"catch\"](function (err) {\n      console.log(err.response);\n      dispatch(appealPostRequestIsLoading(false));\n      dispatch(appealPostRequestHasError(true));\n    });\n  };\n}\nexport function trackEditFormInput(input, field) {\n  console.log(\"Input: \", input);\n  console.log(\"Field: \", field);\n  return {\n    type: 'TRACK_EDIT_FORM_INPUT',\n    field: field,\n    input: input\n  };\n}\nexport function getEditFormDataSuccess(data) {\n  return {\n    type: \"GET_EDIT_FORM_DATA_SUCCESS\",\n    data: data\n  };\n}\nexport function getEditFormData(appealId) {\n  return function (dispatch) {\n    dispatch(getEditFormDataIsLoading(true));\n    axios.get(\"\".concat(api, \"appeals/\").concat(appealId)).then(function (response) {\n      dispatch(getEditFormDataIsLoading(false));\n      dispatch(getEditFormDataSuccess(response.data));\n      console.log(\"get edit form\");\n      console.log(response.data);\n      dispatch(formDataFetchSuccess(response.data.user.id, \"user_id\"));\n    })[\"catch\"](function (err) {\n      console.log(err.response);\n      dispatch(getEditFormDataHasError(true, err.response.status, err.response.statusText));\n    });\n  };\n}\nexport function appealPatchRequestIsLoading(bool) {\n  return {\n    type: 'APPEAL_PATCH_REQUEST_IS_LOADING',\n    isLoading: bool\n  };\n}\nexport function appealPatchRequestHasError(bool, statusCode, statusText) {\n  return {\n    type: 'APPEAL_PATCH_REQUEST_HAS_ERROR',\n    hasErrored: bool,\n    statusCode: statusCode,\n    statusText: statusText\n  };\n}\nexport function appealPatchRequestSuccess(data) {\n  return {\n    type: \"APPEAL_PATCH_REQUEST_SUCCESS\",\n    data: data\n  };\n}\nexport function sendPatchAppealRequest(data, appealId) {\n  return function (dispatch) {\n    dispatch(appealPatchRequestIsLoading(true));\n    dispatch(appealPostRequestHasError(false));\n    console.log(data);\n    var token = document.querySelector(\"[name=csrf-token]\").content;\n    axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n\n    var cleanData = function cleanData(object) {\n      delete data[\"species\"];\n      delete data[\"clinic\"];\n      delete data[\"user\"];\n      delete data[\"id\"];\n      delete data[\"created_at\"];\n      delete data[\"updated_at\"];\n      return data;\n    };\n\n    axios.patch(\"\".concat(api, \"appeals/\").concat(appealId), cleanData(data)).then(function (response) {\n      console.log(\"Got response from patch appeal request\");\n      console.log(response.data);\n      dispatch(appealPatchRequestIsLoading(false));\n      dispatch(appealPatchRequestSuccess(response.data));\n    })[\"catch\"](function (err) {\n      console.log(err.response);\n      dispatch(appealPatchRequestHasError(true, err.response.status, err.response.statusText));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/forms/AppealForm/actions/index.js"],"names":["axios","api","appealPostRequestHasError","bool","type","hasErrored","appealPostRequestIsLoading","isLoading","appealPostRequestSuccess","data","trackInputData","input","field","getEditFormDataHasError","boolean","statusCode","statusText","getEditFormDataIsLoading","formDataFetchSuccess","getFormRenderData","dispatch","get","then","response","console","log","error","clearForm","postAppealForm","payload","userId","token","document","querySelector","content","defaults","headers","common","appealData","user_id","status","post","err","trackEditFormInput","getEditFormDataSuccess","getEditFormData","appealId","user","id","appealPatchRequestIsLoading","appealPatchRequestHasError","appealPatchRequestSuccess","sendPatchAppealRequest","cleanData","object","patch"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const api = '/api/v1/'\n\nexport function appealPostRequestHasError(bool) {\n    return {\n        type: 'APPEAL_POST_REQUEST_HAS_ERROR',\n        hasErrored: bool\n    };\n}\nexport function appealPostRequestIsLoading(bool) {\n    return {\n        type: 'APPEAL_POST_REQUEST_IS_LOADING',\n        isLoading: bool\n    };\n}\nexport function appealPostRequestSuccess(data) {\n    return {\n        type: 'APPEAL_POST_REQUEST_DATA_SUCCESS',\n        data\n    };\n}\n\nexport function trackInputData(input, field) {\n    return {\n        type: 'TRACK_INPUT_DATA',\n        field,\n        input\n    }\n}\nexport function getEditFormDataHasError(boolean, statusCode, statusText) {\n    return {\n        type: 'GET_EDIT_FORM_DATA_HAS_ERROR',\n        hasErrored: boolean,\n        statusCode,\n        statusText\n    };\n}\nexport function getEditFormDataIsLoading(boolean) {\n    return {\n        type: 'GET_EDIT_FORM_DATA_IS_LOADING',\n        isLoading: boolean\n    };\n}\n\nexport function formDataFetchSuccess(data, field){\n    return {\n        type: 'GET_FORM_FIELD_DATA',\n        data,\n        field\n    }\n}\n\nexport function getFormRenderData(){\n    return (dispatch) => {\n        axios\n        .get(`${api}clinics`)\n        .then((response)=>{\n            console.log(`got clinic data`)\n            dispatch(formDataFetchSuccess(response.data, \"clinics\"));\n        })\n        .then(()=>{\n            axios\n            .get(`${api}species`)\n            .then((response)=>{\n                console.log(`got species data`)\n                dispatch(formDataFetchSuccess(response.data, \"species\"));\n            })\n        })\n        .catch(error => console.log(error))\n\n        axios.get(`api`)\n\n    }\n\n}\n\nexport function clearForm(){\n    return {\n        type: 'CLEAR_FORM'\n    }\n}\n\nexport function postAppealForm(payload, userId) {\n    return (dispatch) => {\n        dispatch(appealPostRequestHasError(false));\n      dispatch(appealPostRequestIsLoading(true));\n      const token = document.querySelector(\"[name=csrf-token]\").content;\n      axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n\n      let appealData = {\n          ...payload,\n          user_id: userId,\n          status: \"open\"\n      }\n\n      axios\n        .post(`/api/v1/appeals`, appealData)\n        .then((response) => {\n          dispatch(appealPostRequestIsLoading(false));\n          console.log(`got response`);\n          console.log(response.data)\n          dispatch(appealPostRequestSuccess(response.data));\n          dispatch(clearForm());\n        })\n        .catch((err) => {\n          console.log(err.response);\n          dispatch(appealPostRequestIsLoading(false));\n          dispatch(appealPostRequestHasError(true));\n        });\n    };\n}\n\n\nexport function trackEditFormInput(input, field) {\n    console.log(`Input: `, input)\n    console.log(`Field: `, field)\n    return {\n        type: 'TRACK_EDIT_FORM_INPUT',\n        field,\n        input\n    }\n}\n\nexport function getEditFormDataSuccess(data) {\n    return {\n        type: \"GET_EDIT_FORM_DATA_SUCCESS\",\n        data\n    }\n}\n\nexport function getEditFormData(appealId){\n    return (dispatch) => {\n        dispatch(getEditFormDataIsLoading(true))\n        axios\n        .get(`${api}appeals/${appealId}`)\n        .then(response => {\n            dispatch(getEditFormDataIsLoading(false))\n            dispatch(getEditFormDataSuccess(response.data))\n            console.log(`get edit form`)\n            console.log(response.data)\n            dispatch(formDataFetchSuccess(response.data.user.id, \"user_id\"))\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch(getEditFormDataHasError(true, err.response.status, err.response.statusText))\n        })\n    }\n}\n\n\nexport function appealPatchRequestIsLoading(bool){\n    return {\n        type: 'APPEAL_PATCH_REQUEST_IS_LOADING',\n        isLoading: bool,\n    }\n}\n\nexport function appealPatchRequestHasError(bool, statusCode, statusText){\n    return {\n        type: 'APPEAL_PATCH_REQUEST_HAS_ERROR',\n        hasErrored: bool,\n        statusCode,\n        statusText\n    }\n}\n\n\nexport function appealPatchRequestSuccess(data) {\n  return {\n    type: \"APPEAL_PATCH_REQUEST_SUCCESS\",\n    data\n  };\n}\n\nexport function sendPatchAppealRequest(data, appealId){\n    return (dispatch) => {\n      dispatch(appealPatchRequestIsLoading(true));\n      dispatch(appealPostRequestHasError(false));\n\n      console.log(data);\n\n      const token = document.querySelector(\"[name=csrf-token]\").content;\n      axios.defaults.headers.common[\"X-CSRF-TOKEN\"] = token;\n      let cleanData = (object)=> {\n        delete data[\"species\"];\n        delete data[\"clinic\"];\n      delete data[\"user\"];\n      delete data[\"id\"];\n      delete data[\"created_at\"];\n      delete data[\"updated_at\"];  \n      return data\n      }\n\n      axios\n        .patch(`${api}appeals/${appealId}`, cleanData(data) )\n        .then((response) => {\n            console.log(`Got response from patch appeal request`)\n            console.log(response.data)\n          dispatch(appealPatchRequestIsLoading(false));\n          dispatch(appealPatchRequestSuccess(response.data));\n        })\n        .catch((err) => {\n          console.log(err.response);\n          dispatch(\n            appealPatchRequestHasError(\n              true,\n              err.response.status,\n              err.response.statusText\n            )\n          );\n        });\n    };\n}"]},"metadata":{},"sourceType":"module"}