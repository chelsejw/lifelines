{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/chels/webdev/lifelines/app/javascript/packs/app/dashboard/DonorForm/DonorFormViaClinic.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BarLoader from 'react-spinners/BarLoader';\n\nvar DonorFormViaClinic = function DonorFormViaClinic(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clinics = _useState2[0],\n      setClinics = _useState2[1];\n\n  useEffect(function () {\n    axios.get(\"/api/v1/users/clinics\").then(function (res) {\n      setClinics(res.data.clinics);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var clinicOptions = clinics.map(function (clinic) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: clinic.id,\n      value: clinic.user_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 49\n      }\n    }, clinic.display_name);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-3 pb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Verifying through Clinic\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return props.tracker(e.target.value, e.target.name);\n    },\n    className: \"form-control\",\n    id: \"fullName\",\n    name: \"owner_name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mobile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return props.tracker(e.target.value, e.target.name);\n    },\n    className: \"form-control\",\n    id: \"mobile\",\n    name: \"mobile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"petName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Donor Pet's Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return props.tracker(e.target.value, e.target.name);\n    },\n    className: \"form-control\",\n    id: \"petName\",\n    name: \"pet_name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"clinic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Clinic\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: function onChange(e) {\n      return props.tracker(e.target.value, e.target.name);\n    },\n    name: \"authorizer_id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Select a partner clinic...\"), clinicOptions))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Additional Info (optional)\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return props.tracker(e.target.value, e.target.name);\n    },\n    className: \"form-control\",\n    id: \"text\",\n    name: \"details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }))), props.error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-3 text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, props.errorMessage), props.loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BarLoader, {\n    color: \"#F5A623\",\n    height: 4,\n    width: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-3 text-warning\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, props.loadingMessage)), props.success && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-3 text-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, props.successMessage), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return props.submit(e);\n    },\n    className: \"mt-3 btn btn-lg btn-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Request Verification\")));\n};\n\nexport default DonorFormViaClinic;","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/dashboard/DonorForm/DonorFormViaClinic.js"],"names":["React","useState","useEffect","axios","BarLoader","DonorFormViaClinic","props","clinics","setClinics","get","then","res","data","err","console","log","clinicOptions","map","clinic","id","user_id","display_name","e","tracker","target","value","name","error","errorMessage","loading","loadingMessage","success","successMessage","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport BarLoader from 'react-spinners/BarLoader'\n\nconst DonorFormViaClinic = (props) => {\n\n    const [clinics, setClinics] = useState([])\n\n    useEffect(()=> {\n        axios.get(`/api/v1/users/clinics`)\n        .then(res=> {\n            setClinics(res.data.clinics)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    const clinicOptions = clinics.map(clinic => <option key={clinic.id} value={clinic.user_id}>{clinic.display_name}</option>)\n\n    return (\n      <div className=\"pt-3 pb-5\">\n        <h3>Verifying through Clinic</h3>\n\n        <form>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <label htmlFor=\"fullName\">Full Name</label>\n              <input\n                onChange={(e) => props.tracker(e.target.value, e.target.name)}\n                className=\"form-control\"\n                id=\"fullName\"\n                name=\"owner_name\"\n              />\n            </div>\n\n            <div className=\"col-4\">\n              <label htmlFor=\"mobile\">Mobile Number</label>\n              <input\n                onChange={(e) => props.tracker(e.target.value, e.target.name)}\n                className=\"form-control\"\n                id=\"mobile\"\n                name=\"mobile\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <label htmlFor=\"petName\">Donor Pet's Name</label>\n              <input\n                onChange={(e) => props.tracker(e.target.value, e.target.name)}\n                className=\"form-control\"\n                id=\"petName\"\n                name=\"pet_name\"\n              />\n            </div>\n\n            <div className=\"col-8\">\n              <label htmlFor=\"clinic\">Clinic</label>\n              <select\n                className=\"form-control\"\n                onChange={(e) => props.tracker(e.target.value, e.target.name)}\n                name=\"authorizer_id\"\n              >\n                <option value=\"\">Select a partner clinic...</option>\n                {clinicOptions}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col\">\n              <label htmlFor=\"text\">Additional Info (optional)</label>\n              <input\n                onChange={(e) => props.tracker(e.target.value, e.target.name)}\n                className=\"form-control\"\n                id=\"text\"\n                name=\"details\"\n              />\n            </div>\n          </div>\n\n          {props.error && (\n            <p className=\"mt-3 text-danger\">{props.errorMessage}</p>\n          )}\n\n          {props.loading && (\n            <div>\n              <BarLoader color={\"#F5A623\"} height={4} width={100} />\n              <p className=\"mt-3 text-warning\">{props.loadingMessage}</p>\n            </div>\n          )}\n\n          {props.success && (\n            <p className=\"mt-3 text-success\">{props.successMessage}</p>\n          )}\n\n          <button\n            onClick={(e) => props.submit(e)}\n            className=\"mt-3 btn btn-lg btn-danger\"\n          >\n            Request Verification\n          </button>\n        </form>\n      </div>\n    );\n}\n\nexport default DonorFormViaClinic"]},"metadata":{},"sourceType":"module"}