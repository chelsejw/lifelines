{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/chels/webdev/lifelines/app/javascript/packs/app/dashboard/VerificationForm.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport DonorForm from \"./DonorForm/DonorFormContainer\";\nimport ClinicForm from './ClinicForm';\nimport { connect } from 'react-redux';\n\nvar VerificationForm = function VerificationForm(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(\"donor\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      requestType = _useState4[0],\n      setRequestType = _useState4[1];\n\n  if (props.auth.currentUser.profile.verified) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-3 container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, \"You are already verified.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"Good job!\"));\n  }\n\n  if (props.auth.currentUser.pendingVerifications) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-3 container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"You have a pending verification.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Kindly wait for us to process that before submitting another request.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-auto my-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setRequestType(\"donor\");\n    },\n    className: \"w-90 btn btn-lg btn-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }\n  }, \"Donor Verification\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setRequestType(\"clinic\");\n    },\n    className: \"btn-lg btn w-90 btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }\n  }, \"Clinic Verification\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }, requestType == \"donor\" ? /*#__PURE__*/React.createElement(DonorForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 48\n    }\n  }) : /*#__PURE__*/React.createElement(ClinicForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 64\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(VerificationForm);","map":{"version":3,"sources":["/Users/chels/webdev/lifelines/app/javascript/packs/app/dashboard/VerificationForm.js"],"names":["React","useState","DonorForm","ClinicForm","connect","VerificationForm","props","input","setInput","requestType","setRequestType","auth","currentUser","profile","verified","pendingVerifications","mapStateToProps","state"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,kBAENL,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,MAEzBM,KAFyB;AAAA,MAElBC,QAFkB;;AAAA,mBAIMP,QAAQ,CAAC,OAAD,CAJd;AAAA;AAAA,MAIzBQ,WAJyB;AAAA,MAIZC,cAJY;;AAK9B,MAAIJ,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuBC,OAAvB,CAA+BC,QAAnC,EAA6C;AAC3C,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD;;AACH,MAAIR,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuBG,oBAA3B,EAAiD;AAC7C,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFA,CADJ;AAMH;;AACQ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,cAAc,CAAC,OAAD,CAApB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE;AAAA,aAAMA,cAAc,CAAC,QAAD,CAApB;AAAA,KADX;AAEE,IAAA,SAAS,EAAC,6BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CATF,CADF,CADF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,WAAW,IAAI,OAAf,gBAAyB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gBAAyC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5C,CAvBF,CADF,CADF;AA+BZ,CApDD;;AAqDA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLN,IAAAA,IAAI,EAAEM,KAAK,CAACN;AADP,GAAP;AAGD,CAJD;;AAKA,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBX,gBAAzB,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport DonorForm from \"./DonorForm/DonorFormContainer\"\nimport ClinicForm from './ClinicForm'\nimport {connect} from 'react-redux'\nconst VerificationForm = (props) => {\n\n    const [input, setInput] = useState(\"\")\n\n    const [requestType, setRequestType] = useState(\"donor\")\n      if (props.auth.currentUser.profile.verified) {\n        return (\n          <div className=\"py-3 container\">\n            <h3>You are already verified.</h3>\n            <p>Good job!</p>\n          </div>\n        );\n      }\n    if (props.auth.currentUser.pendingVerifications) {\n        return (\n            <div className=\"py-3 container\">\n            <h3>You have a pending verification.</h3>\n            <p>Kindly wait for us to process that before submitting another request.</p>\n            </div>\n        )\n    }\n             return (\n               <div>\n                 <div className=\"container\">\n                   <div className=\"row mx-auto my-4\">\n                     <div className=\"col\">\n                       <div className=\"row\">\n                         <div className=\"col\">\n                           <button\n                             onClick={() => setRequestType(\"donor\")}\n                             className=\"w-90 btn btn-lg btn-danger\"\n                           >\n                             Donor Verification\n                           </button>\n                         </div>\n                         <div className=\"col\">\n                           <button\n                             onClick={() => setRequestType(\"clinic\")}\n                             className=\"btn-lg btn w-90 btn-success\"\n                           >\n                             Clinic Verification\n                           </button>\n                         </div>\n                       </div>\n                     </div>\n                   </div>\n                   <div>\n                     {requestType == \"donor\" ? <DonorForm /> : <ClinicForm />}\n                   </div>\n                 </div>\n               </div>\n             );\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\nexport default connect(mapStateToProps)(VerificationForm);\n"]},"metadata":{},"sourceType":"module"}